"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[9561],{7553:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"data-dictionary/E/exceptions","title":"Exceptions","description":"The Data Dictionary entry for the Exceptions entity","source":"@site/docs/data-dictionary/E/exceptions.mdx","sourceDirName":"data-dictionary/E","slug":"/data-dictionary/exceptions","permalink":"/birt-docs/docs/data-dictionary/exceptions","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/E/exceptions.mdx","tags":[],"version":"current","frontMatter":{"title":"Exceptions","description":"The Data Dictionary entry for the Exceptions entity","slug":"/data-dictionary/exceptions"},"sidebar":"dataDictionarySidebar","previous":{"title":"Exception Counter","permalink":"/birt-docs/docs/data-dictionary/exception-counter"},"next":{"title":"Base Compensation","permalink":"/birt-docs/docs/data-dictionary/employee-hcm/base-compensation"}}');var a=i(4848),s=i(8453),r=i(6201);const o={title:"Exceptions",description:"The Data Dictionary entry for the Exceptions entity",slug:"/data-dictionary/exceptions"},d="Exceptions",c={},l=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function p(e){const t={h1:"h1",h2:"h2",header:"header",...(0,s.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:n,RelatedEntitiesList:o,RelationshipTable:d,SupportedTypesTable:c}=t;return i||u("ColumnsTable",!0),n||u("CoreEntityTable",!0),o||u("RelatedEntitiesList",!0),d||u("RelationshipTable",!0),c||u("SupportedTypesTable",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"exceptions",children:"Exceptions"})}),"\n","\n",Array.isArray(r.z2J.h_)?r.z2J.h_.map(((e,t)=>(0,a.jsx)("p",{children:e},t))):r.z2J.h_.split("\n").map(((e,t)=>(0,a.jsx)("p",{children:e},t))),"\n",(0,a.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,a.jsx)(c,{supportedTypes:r.z2J.mz}),"\n",(0,a.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",r.z2J.tB,"\n",(0,a.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,a.jsx)(i,{columns:r.z2J.YB}),"\n",(0,a.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,a.jsx)(o,{relatedEntities:r.z2J.fw}),"\n",(0,a.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,a.jsx)(n,{coreEntities:r.z2J.Zw}),"\n",(0,a.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,a.jsx)(d,{relationship:r.z2J.dL,simple:!0}),"\n",r.z2J.Ut&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h2",{children:"Additional Information"}),Array.isArray(r.z2J.Ut)?r.z2J.Ut.map(((e,t)=>(0,a.jsx)("p",{children:e},t))):(0,a.jsx)("p",{children:r.z2J.Ut})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);