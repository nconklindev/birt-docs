"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[2119],{5107:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"data-dictionary/S/schedule-availability","title":"Schedule Availbility","description":"The Data Dictionary entry for the Schedule Availbility entity","source":"@site/docs/data-dictionary/S/schedule-availability.mdx","sourceDirName":"data-dictionary/S","slug":"/data-dictionary/schedule-availability","permalink":"/birt-docs/docs/data-dictionary/schedule-availability","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/S/schedule-availability.mdx","tags":[],"version":"current","frontMatter":{"title":"Schedule Availbility","description":"The Data Dictionary entry for the Schedule Availbility entity","slug":"/data-dictionary/schedule-availability"},"sidebar":"dataDictionarySidebar","previous":{"title":"Reviewer List Assignments","permalink":"/birt-docs/docs/data-dictionary/reviewer-list-assignments"},"next":{"title":"Schedule Call Log","permalink":"/birt-docs/docs/data-dictionary/schedule-call-log"}}');var l=t(4848),n=t(8453),d=t(6201);const r={title:"Schedule Availbility",description:"The Data Dictionary entry for the Schedule Availbility entity",slug:"/data-dictionary/schedule-availability"},s="Schedule Availbility",o={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function h(e){const i={h1:"h1",h2:"h2",header:"header",...(0,n.R)(),...e.components},{ColumnsTable:t,CoreEntityTable:a,RelatedEntitiesList:r,RelationshipTable:s,SupportedTypesTable:o}=i;return t||y("ColumnsTable",!0),a||y("CoreEntityTable",!0),r||y("RelatedEntitiesList",!0),s||y("RelationshipTable",!0),o||y("SupportedTypesTable",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"schedule-availbility",children:"Schedule Availbility"})}),"\n","\n",Array.isArray(d.xHO.h_)?d.xHO.h_.map(((e,i)=>(0,l.jsx)("p",{children:e},i))):d.xHO.h_.split("\n").map(((e,i)=>(0,l.jsx)("p",{children:e},i))),"\n",(0,l.jsx)(i.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,l.jsx)(o,{supportedTypes:d.xHO.mz}),"\n",(0,l.jsx)(i.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",d.xHO.tB,"\n",(0,l.jsx)(i.h2,{id:"columns",children:"Columns"}),"\n",(0,l.jsx)(t,{columns:d.xHO.YB}),"\n",(0,l.jsx)(i.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,l.jsx)(r,{relatedEntities:d.xHO.fw}),"\n",(0,l.jsx)(i.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,l.jsx)(a,{coreEntities:d.xHO.Zw}),"\n",(0,l.jsx)(i.h2,{id:"relationship",children:"Relationship"}),"\n",(0,l.jsx)(s,{relationship:d.xHO.dL,simple:!0}),"\n",d.xHO.additionalInfo&&(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("h2",{children:"Additional Information"}),Array.isArray(d.xHO.additionalInfo)?d.xHO.additionalInfo.map(((e,i)=>(0,l.jsx)("p",{children:e},i))):(0,l.jsx)("p",{children:d.xHO.additionalInfo})]})]})}function u(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}function y(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);