"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[3499],{2949:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"data-dictionary/healthcare-analytics/day","title":"Day","description":"The Data Dictionary entry for the Day entity","source":"@site/docs/data-dictionary/healthcare-analytics/day.mdx","sourceDirName":"data-dictionary/healthcare-analytics","slug":"/data-dictionary/healthcare-analytics/day","permalink":"/birt-docs/docs/data-dictionary/healthcare-analytics/day","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/healthcare-analytics/day.mdx","tags":[],"version":"current","frontMatter":{"title":"Day","description":"The Data Dictionary entry for the Day entity"},"sidebar":"dataDictionarySidebar","previous":{"title":"Daily Productivity","permalink":"/birt-docs/docs/data-dictionary/healthcare-analytics/daily-productivity"},"next":{"title":"Pay Period Productivity","permalink":"/birt-docs/docs/data-dictionary/healthcare-analytics/pay-period-productivity"}}');var n=a(4848),r=a(8453),d=a(6201);const s={title:"Day",description:"The Data Dictionary entry for the Day entity"},l="Day",o={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function y(t){const e={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...t.components},{ColumnsTable:a,CoreEntityTable:i,RelatedEntitiesList:s,RelationshipTable:l,SupportedTypesTable:o}=e;return a||p("ColumnsTable",!0),i||p("CoreEntityTable",!0),s||p("RelatedEntitiesList",!0),l||p("RelationshipTable",!0),o||p("SupportedTypesTable",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"day",children:"Day"})}),"\n","\n",Array.isArray(d.vdE.h_)?d.vdE.h_.map(((t,e)=>(0,n.jsx)("p",{children:t},e))):d.vdE.h_.split("\n").map(((t,e)=>(0,n.jsx)("p",{children:t},e))),"\n",(0,n.jsx)(e.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,n.jsx)(o,{supportedTypes:d.vdE.mz}),"\n",(0,n.jsx)(e.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",d.vdE.tB,"\n",(0,n.jsx)(e.h2,{id:"columns",children:"Columns"}),"\n",(0,n.jsx)(a,{columns:d.vdE.YB}),"\n",(0,n.jsx)(e.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,n.jsx)(s,{relatedEntities:d.vdE.fw}),"\n",(0,n.jsx)(e.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,n.jsx)(i,{coreEntities:d.vdE.Zw}),"\n",(0,n.jsx)(e.h2,{id:"relationship",children:"Relationship"}),"\n",(0,n.jsx)(l,{relationship:d.vdE.dL}),"\n",d.vdE.additionalInfo&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h2",{children:"Additional Information"}),Array.isArray(d.vdE.additionalInfo)?d.vdE.additionalInfo.map(((t,e)=>(0,n.jsx)("p",{children:t},e))):(0,n.jsx)("p",{children:d.vdE.additionalInfo})]})]})}function h(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(y,{...t})}):y(t)}function p(t,e){throw new Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);