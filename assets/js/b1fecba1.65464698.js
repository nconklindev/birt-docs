"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[2582],{7051:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"data-dictionary/employee-hcm/incidents","title":"Incidents","description":"The Data Dictionary entry for the Incidents entity","source":"@site/docs/data-dictionary/employee-hcm/incidents.mdx","sourceDirName":"data-dictionary/employee-hcm","slug":"/data-dictionary/employee-hcm/incidents","permalink":"/birt-docs/docs/data-dictionary/employee-hcm/incidents","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/employee-hcm/incidents.mdx","tags":[],"version":"current","frontMatter":{"title":"Incidents","description":"The Data Dictionary entry for the Incidents entity"},"sidebar":"dataDictionarySidebar","previous":{"title":"Demographics","permalink":"/birt-docs/docs/data-dictionary/employee-hcm/demographics"},"next":{"title":"Job Changes History","permalink":"/birt-docs/docs/data-dictionary/employee-hcm/job-changes-history"}}');var a=i(4848),r=i(8453),s=i(6201);const d={title:"Incidents",description:"The Data Dictionary entry for the Incidents entity"},o="Incidents",l={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function p(e){const t={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:n,RelatedEntitiesList:d,RelationshipTable:o,SupportedTypesTable:l}=t;return i||y("ColumnsTable",!0),n||y("CoreEntityTable",!0),d||y("RelatedEntitiesList",!0),o||y("RelationshipTable",!0),l||y("SupportedTypesTable",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"incidents",children:"Incidents"})}),"\n","\n",Array.isArray(s.MyP.h_)?s.MyP.h_.map(((e,t)=>(0,a.jsx)("p",{children:e},t))):s.MyP.h_.split("\n").map(((e,t)=>(0,a.jsx)("p",{children:e},t))),"\n",(0,a.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,a.jsx)(l,{supportedTypes:s.MyP.mz}),"\n",(0,a.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",s.MyP.tB,"\n",(0,a.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,a.jsx)(i,{columns:s.MyP.YB}),"\n",(0,a.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,a.jsx)(d,{relatedEntities:s.MyP.fw}),"\n",(0,a.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,a.jsx)(n,{coreEntities:s.MyP.Zw}),"\n",(0,a.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,a.jsx)(o,{relationship:s.MyP.dL,simple:!0}),"\n",s.MyP.additionalInfo&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h2",{children:"Additional Information"}),Array.isArray(s.MyP.additionalInfo)?s.MyP.additionalInfo.map(((e,t)=>(0,a.jsx)("p",{children:e},t))):(0,a.jsx)("p",{children:s.MyP.additionalInfo})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}function y(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);