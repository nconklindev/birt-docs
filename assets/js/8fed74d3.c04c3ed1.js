"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[8188],{3088:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"data-dictionary/S/schedule-rule-overrides","title":"Schedule Rule Overrides","description":"The Data Dictionary entry for the Schedule Rule Overrides entity","source":"@site/docs/data-dictionary/S/schedule-rule-overrides.mdx","sourceDirName":"data-dictionary/S","slug":"/data-dictionary/schedule-rule-overrides","permalink":"/docs/data-dictionary/schedule-rule-overrides","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/S/schedule-rule-overrides.mdx","tags":[],"version":"current","frontMatter":{"title":"Schedule Rule Overrides","description":"The Data Dictionary entry for the Schedule Rule Overrides entity","slug":"/data-dictionary/schedule-rule-overrides"},"sidebar":"dataDictionarySidebar","previous":{"title":"Schedule Metrics (Location)","permalink":"/docs/data-dictionary/schedule-metrics-location"},"next":{"title":"Schedule Segment Availability","permalink":"/docs/data-dictionary/schedule-segment-availability"}}');var d=t(4848),n=t(8453),a=t(6201);const l={title:"Schedule Rule Overrides",description:"The Data Dictionary entry for the Schedule Rule Overrides entity",slug:"/data-dictionary/schedule-rule-overrides"},s="Schedule Rule Overrides",o={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function u(e){const i={h1:"h1",h2:"h2",header:"header",...(0,n.R)(),...e.components},{ColumnsTable:t,CoreEntityTable:r,RelatedEntitiesList:l,RelationshipTable:s,SupportedTypesTable:o}=i;return t||p("ColumnsTable",!0),r||p("CoreEntityTable",!0),l||p("RelatedEntitiesList",!0),s||p("RelationshipTable",!0),o||p("SupportedTypesTable",!0),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(i.header,{children:(0,d.jsx)(i.h1,{id:"schedule-rule-overrides",children:"Schedule Rule Overrides"})}),"\n","\n",Array.isArray(a.$6T.h_)?a.$6T.h_.map(((e,i)=>(0,d.jsx)("p",{children:e},i))):a.$6T.h_.split("\n").map(((e,i)=>(0,d.jsx)("p",{children:e},i))),"\n",(0,d.jsx)(i.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,d.jsx)(o,{supportedTypes:a.$6T.mz}),"\n",(0,d.jsx)(i.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",a.$6T.tB,"\n",(0,d.jsx)(i.h2,{id:"columns",children:"Columns"}),"\n",(0,d.jsx)(t,{columns:a.$6T.YB}),"\n",(0,d.jsx)(i.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,d.jsx)(l,{relatedEntities:a.$6T.fw}),"\n",(0,d.jsx)(i.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,d.jsx)(r,{coreEntities:a.$6T.Zw}),"\n",(0,d.jsx)(i.h2,{id:"relationship",children:"Relationship"}),"\n",(0,d.jsx)(s,{relationship:a.$6T.dL,simple:!0}),"\n",a.$6T.additionalInfo&&(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("h2",{children:"Additional Information"}),Array.isArray(a.$6T.additionalInfo)?a.$6T.additionalInfo.map(((e,i)=>(0,d.jsx)("p",{children:e},i))):(0,d.jsx)("p",{children:a.$6T.additionalInfo})]})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,d.jsx)(i,{...e,children:(0,d.jsx)(u,{...e})}):u(e)}function p(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);