"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[6225],{8639:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"data-dictionary/R/reviewer-list-assignments","title":"Reviewer List Assignments","description":"The Data Dictionary entry for the Reviewer List Assignments entity","source":"@site/docs/data-dictionary/R/reviewer-list-assignments.mdx","sourceDirName":"data-dictionary/R","slug":"/data-dictionary/reviewer-list-assignments","permalink":"/docs/data-dictionary/reviewer-list-assignments","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/R/reviewer-list-assignments.mdx","tags":[],"version":"current","frontMatter":{"title":"Reviewer List Assignments","description":"The Data Dictionary entry for the Reviewer List Assignments entity","slug":"/data-dictionary/reviewer-list-assignments"},"sidebar":"dataDictionarySidebar","previous":{"title":"Projected Totals (Include Corrections)","permalink":"/docs/data-dictionary/projected-totals-include-corrections"},"next":{"title":"Schedule Availbility","permalink":"/docs/data-dictionary/schedule-availability"}}');var s=i(4848),r=i(8453),a=i(6201);const d={title:"Reviewer List Assignments",description:"The Data Dictionary entry for the Reviewer List Assignments entity",slug:"/data-dictionary/reviewer-list-assignments"},l="Reviewer List Assignments",o={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function p(e){const t={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:n,RelatedEntitiesList:d,RelationshipTable:l,SupportedTypesTable:o}=t;return i||u("ColumnsTable",!0),n||u("CoreEntityTable",!0),d||u("RelatedEntitiesList",!0),l||u("RelationshipTable",!0),o||u("SupportedTypesTable",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"reviewer-list-assignments",children:"Reviewer List Assignments"})}),"\n","\n",Array.isArray(a._YH.h_)?a._YH.h_.map(((e,t)=>(0,s.jsx)("p",{children:e},t))):a._YH.h_.split("\n").map(((e,t)=>(0,s.jsx)("p",{children:e},t))),"\n",(0,s.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,s.jsx)(o,{supportedTypes:a._YH.mz}),"\n",(0,s.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",a._YH.tB,"\n",(0,s.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,s.jsx)(i,{columns:a._YH.YB}),"\n",(0,s.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,s.jsx)(d,{relatedEntities:a._YH.fw}),"\n",(0,s.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,s.jsx)(n,{coreEntities:a._YH.Zw}),"\n",(0,s.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,s.jsx)(l,{relationship:a._YH.dL,simple:!0}),"\n",a._YH.additionalInfo&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h2",{children:"Additional Information"}),Array.isArray(a._YH.additionalInfo)?a._YH.additionalInfo.map(((e,t)=>(0,s.jsx)("p",{children:e},t))):(0,s.jsx)("p",{children:a._YH.additionalInfo})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);