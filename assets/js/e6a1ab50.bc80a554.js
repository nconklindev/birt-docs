"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[2858],{1148:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>d,default:()=>y,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"data-dictionary/P/projected-totals-corrections-only","title":"Projected Totals (Corrections Only)","description":"The Data Dictionary entry for the Projected Totals (Corrections Only) entity","source":"@site/docs/data-dictionary/P/projected-totals-corrections-only.mdx","sourceDirName":"data-dictionary/P","slug":"/data-dictionary/projected-totals-corrections-only","permalink":"/birt-docs/docs/data-dictionary/projected-totals-corrections-only","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/P/projected-totals-corrections-only.mdx","tags":[],"version":"current","frontMatter":{"title":"Projected Totals (Corrections Only)","description":"The Data Dictionary entry for the Projected Totals (Corrections Only) entity","slug":"/data-dictionary/projected-totals-corrections-only"},"sidebar":"dataDictionarySidebar","previous":{"title":"Projected Paycode Totals (Include Corrections)","permalink":"/birt-docs/docs/data-dictionary/projected-paycode-totals-include-corrections"},"next":{"title":"Projected Totals (Exclude Corrections)","permalink":"/birt-docs/docs/data-dictionary/projected-totals-exclude-corrections"}}');var i=o(4848),n=o(8453),s=o(6201);const a={title:"Projected Totals (Corrections Only)",description:"The Data Dictionary entry for the Projected Totals (Corrections Only) entity",slug:"/data-dictionary/projected-totals-corrections-only"},d="Projected Totals (Corrections Only)",l={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function p(t){const e={h1:"h1",h2:"h2",header:"header",...(0,n.R)(),...t.components},{ColumnsTable:o,CoreEntityTable:r,RelatedEntitiesList:a,RelationshipTable:d,SupportedTypesTable:l}=e;return o||h("ColumnsTable",!0),r||h("CoreEntityTable",!0),a||h("RelatedEntitiesList",!0),d||h("RelationshipTable",!0),l||h("SupportedTypesTable",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"projected-totals-corrections-only",children:"Projected Totals (Corrections Only)"})}),"\n","\n",Array.isArray(s.vGs.h_)?s.vGs.h_.map(((t,e)=>(0,i.jsx)("p",{children:t},e))):s.vGs.h_.split("\n").map(((t,e)=>(0,i.jsx)("p",{children:t},e))),"\n",(0,i.jsx)(e.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,i.jsx)(l,{supportedTypes:s.vGs.mz}),"\n",(0,i.jsx)(e.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",s.vGs.tB,"\n",(0,i.jsx)(e.h2,{id:"columns",children:"Columns"}),"\n",(0,i.jsx)(o,{columns:s.vGs.YB}),"\n",(0,i.jsx)(e.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,i.jsx)(a,{relatedEntities:s.vGs.fw}),"\n",(0,i.jsx)(e.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,i.jsx)(r,{coreEntities:s.vGs.Zw}),"\n",(0,i.jsx)(e.h2,{id:"relationship",children:"Relationship"}),"\n",(0,i.jsx)(d,{relationship:s.vGs.dL,simple:!0}),"\n",s.vGs.additionalInfo&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h2",{children:"Additional Information"}),Array.isArray(s.vGs.additionalInfo)?s.vGs.additionalInfo.map(((t,e)=>(0,i.jsx)("p",{children:t},e))):(0,i.jsx)("p",{children:s.vGs.additionalInfo})]})]})}function y(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(p,{...t})}):p(t)}function h(t,e){throw new Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);