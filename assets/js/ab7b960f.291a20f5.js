"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[7234],{2342:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"data-dictionary/P/projected-totals-include-corrections","title":"Projected Totals (Include Corrections)","description":"The Data Dictionary entry for the Projected Totals (Include Corrections) entity","source":"@site/docs/data-dictionary/P/projected-totals-include-corrections.mdx","sourceDirName":"data-dictionary/P","slug":"/data-dictionary/projected-totals-include-corrections","permalink":"/birt-docs/docs/data-dictionary/projected-totals-include-corrections","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/P/projected-totals-include-corrections.mdx","tags":[],"version":"current","frontMatter":{"title":"Projected Totals (Include Corrections)","description":"The Data Dictionary entry for the Projected Totals (Include Corrections) entity","slug":"/data-dictionary/projected-totals-include-corrections"},"sidebar":"dataDictionarySidebar","previous":{"title":"Projected Totals (Exclude Corrections)","permalink":"/birt-docs/docs/data-dictionary/projected-totals-exclude-corrections"},"next":{"title":"Reviewer List Assignments","permalink":"/birt-docs/docs/data-dictionary/reviewer-list-assignments"}}');var o=i(4848),n=i(8453),a=i(6201);const s={title:"Projected Totals (Include Corrections)",description:"The Data Dictionary entry for the Projected Totals (Include Corrections) entity",slug:"/data-dictionary/projected-totals-include-corrections"},d="Projected Totals (Include Corrections)",c={},l=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function p(e){const t={h1:"h1",h2:"h2",header:"header",...(0,n.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:r,RelatedEntitiesList:s,RelationshipTable:d,SupportedTypesTable:c}=t;return i||h("ColumnsTable",!0),r||h("CoreEntityTable",!0),s||h("RelatedEntitiesList",!0),d||h("RelationshipTable",!0),c||h("SupportedTypesTable",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"projected-totals-include-corrections",children:"Projected Totals (Include Corrections)"})}),"\n","\n",Array.isArray(a.TfC.h_)?a.TfC.h_.map(((e,t)=>(0,o.jsx)("p",{children:e},t))):a.TfC.h_.split("\n").map(((e,t)=>(0,o.jsx)("p",{children:e},t))),"\n",(0,o.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,o.jsx)(c,{supportedTypes:a.TfC.mz}),"\n",(0,o.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",a.TfC.tB,"\n",(0,o.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,o.jsx)(i,{columns:a.TfC.YB}),"\n",(0,o.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,o.jsx)(s,{relatedEntities:a.TfC.fw}),"\n",(0,o.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,o.jsx)(r,{coreEntities:a.TfC.Zw}),"\n",(0,o.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,o.jsx)(d,{relationship:a.TfC.dL,simple:!0}),"\n",a.TfC.additionalInfo&&(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h2",{children:"Additional Information"}),Array.isArray(a.TfC.additionalInfo)?a.TfC.additionalInfo.map(((e,t)=>(0,o.jsx)("p",{children:e},t))):(0,o.jsx)("p",{children:a.TfC.additionalInfo})]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}function h(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);