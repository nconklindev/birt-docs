"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[4495],{2269:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"data-dictionary/S/schedule-metrics-by-day-location","title":"Schedule Metrics by Day (Location)","description":"The Data Dictionary entry for the Schedule Metrics by Day (Location) entity","source":"@site/docs/data-dictionary/S/schedule-metrics-by-day-location.mdx","sourceDirName":"data-dictionary/S","slug":"/data-dictionary/schedule-metrics-by-day-location","permalink":"/docs/data-dictionary/schedule-metrics-by-day-location","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/S/schedule-metrics-by-day-location.mdx","tags":[],"version":"current","frontMatter":{"title":"Schedule Metrics by Day (Location)","description":"The Data Dictionary entry for the Schedule Metrics by Day (Location) entity","slug":"/data-dictionary/schedule-metrics-by-day-location"},"sidebar":"dataDictionarySidebar","previous":{"title":"Schedule Group Totals","permalink":"/docs/data-dictionary/schedule-group-totals"},"next":{"title":"Schedule Metrics by Span (Job)","permalink":"/docs/data-dictionary/schedule-metrics-by-span-job"}}');var n=i(4848),r=i(8453),s=i(6201);const o={title:"Schedule Metrics by Day (Location)",description:"The Data Dictionary entry for the Schedule Metrics by Day (Location) entity",slug:"/data-dictionary/schedule-metrics-by-day-location"},d="Schedule Metrics by Day (Location)",c={},l=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function y(e){const t={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:a,RelatedEntitiesList:o,RelationshipTable:d,SupportedTypesTable:c}=t;return i||u("ColumnsTable",!0),a||u("CoreEntityTable",!0),o||u("RelatedEntitiesList",!0),d||u("RelationshipTable",!0),c||u("SupportedTypesTable",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"schedule-metrics-by-day-location",children:"Schedule Metrics by Day (Location)"})}),"\n","\n",Array.isArray(s.HF.h_)?s.HF.h_.map(((e,t)=>(0,n.jsx)("p",{children:e},t))):s.HF.h_.split("\n").map(((e,t)=>(0,n.jsx)("p",{children:e},t))),"\n",(0,n.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,n.jsx)(c,{supportedTypes:s.HF.mz}),"\n",(0,n.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",s.HF.tB,"\n",(0,n.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,n.jsx)(i,{columns:s.HF.YB}),"\n",(0,n.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,n.jsx)(o,{relatedEntities:s.HF.fw}),"\n",(0,n.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,n.jsx)(a,{coreEntities:s.HF.Zw}),"\n",(0,n.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,n.jsx)(d,{relationship:s.HF.dL,simple:!0}),"\n",s.HF.Ut&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h2",{children:"Additional Information"}),Array.isArray(s.HF.Ut)?s.HF.Ut.map(((e,t)=>(0,n.jsx)("p",{children:e},t))):(0,n.jsx)("p",{children:s.HF.Ut})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(y,{...e})}):y(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);