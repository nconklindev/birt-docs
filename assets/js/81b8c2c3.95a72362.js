"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[8133],{1762:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"data-dictionary/W/worked-job","title":"Worked Job","description":"The Data Dictionary entry for the Worked Job entity","source":"@site/docs/data-dictionary/W/worked-job.mdx","sourceDirName":"data-dictionary/W","slug":"/data-dictionary/worked-job","permalink":"/birt-docs/docs/data-dictionary/worked-job","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/W/worked-job.mdx","tags":[],"version":"current","frontMatter":{"title":"Worked Job","description":"The Data Dictionary entry for the Worked Job entity","slug":"/data-dictionary/worked-job"},"sidebar":"dataDictionarySidebar","previous":{"title":"Work Rule Override","permalink":"/birt-docs/docs/data-dictionary/work-rule-override"},"next":{"title":"Worked Shift","permalink":"/birt-docs/docs/data-dictionary/worked-shift"}}');var o=i(4848),n=i(8453),a=i(6201);const d={title:"Worked Job",description:"The Data Dictionary entry for the Worked Job entity",slug:"/data-dictionary/worked-job"},l="Worked Job",s={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function p(e){const t={h1:"h1",h2:"h2",header:"header",...(0,n.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:r,RelatedEntitiesList:d,RelationshipTable:l,SupportedTypesTable:s}=t;return i||u("ColumnsTable",!0),r||u("CoreEntityTable",!0),d||u("RelatedEntitiesList",!0),l||u("RelationshipTable",!0),s||u("SupportedTypesTable",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"worked-job",children:"Worked Job"})}),"\n","\n",Array.isArray(a.wlK.h_)?a.wlK.h_.map(((e,t)=>(0,o.jsx)("p",{children:e},t))):a.wlK.h_.split("\n").map(((e,t)=>(0,o.jsx)("p",{children:e},t))),"\n",(0,o.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,o.jsx)(s,{supportedTypes:a.wlK.mz}),"\n",(0,o.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",a.wlK.tB,"\n",(0,o.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,o.jsx)(i,{columns:a.wlK.YB}),"\n",(0,o.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,o.jsx)(d,{relatedEntities:a.wlK.fw}),"\n",(0,o.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,o.jsx)(r,{coreEntities:a.wlK.Zw}),"\n",(0,o.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,o.jsx)(l,{relationship:a.wlK.dL,simple:!0}),"\n",a.wlK.additionalInfo&&(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("h2",{children:"Additional Information"}),Array.isArray(a.wlK.additionalInfo)?a.wlK.additionalInfo.map(((e,t)=>(0,o.jsx)("p",{children:e},t))):(0,o.jsx)("p",{children:a.wlK.additionalInfo})]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);