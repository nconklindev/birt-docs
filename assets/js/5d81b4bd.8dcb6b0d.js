"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[1813],{3999:(t,i,e)=>{e.r(i),e.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>y});const a=JSON.parse('{"id":"data-dictionary/A/availability-request-status-history","title":"Availability Request Status History","description":"The Data Dictionary entry for the Availability Request Status History entity","source":"@site/docs/data-dictionary/A/availability-request-status-history.mdx","sourceDirName":"data-dictionary/A","slug":"/data-dictionary/availability-request-status-history","permalink":"/birt-docs/docs/data-dictionary/availability-request-status-history","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/A/availability-request-status-history.mdx","tags":[],"version":"current","frontMatter":{"title":"Availability Request Status History","description":"The Data Dictionary entry for the Availability Request Status History entity","slug":"/data-dictionary/availability-request-status-history"},"sidebar":"dataDictionarySidebar","previous":{"title":"Availability Request Detail","permalink":"/birt-docs/docs/data-dictionary/availability-request-detail"},"next":{"title":"Availability Type","permalink":"/birt-docs/docs/data-dictionary/availability-type"}}');var s=e(4848),r=e(8453),l=e(6201);const n={title:"Availability Request Status History",description:"The Data Dictionary entry for the Availability Request Status History entity",slug:"/data-dictionary/availability-request-status-history"},o="Availability Request Status History",d={},y=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function u(t){const i={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...t.components},{ColumnsTable:e,CoreEntityTable:a,RelatedEntitiesList:n,RelationshipTable:o,SupportedTypesTable:d}=i;return e||c("ColumnsTable",!0),a||c("CoreEntityTable",!0),n||c("RelatedEntitiesList",!0),o||c("RelationshipTable",!0),d||c("SupportedTypesTable",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"availability-request-status-history",children:"Availability Request Status History"})}),"\n","\n",Array.isArray(l.Jth.h_)?l.Jth.h_.map(((t,i)=>(0,s.jsx)("p",{children:t},i))):l.Jth.h_.split("\n").map(((t,i)=>(0,s.jsx)("p",{children:t},i))),"\n",(0,s.jsx)(i.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,s.jsx)(d,{supportedTypes:l.Jth.mz}),"\n",(0,s.jsx)(i.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",l.Jth.tB,"\n",(0,s.jsx)(i.h2,{id:"columns",children:"Columns"}),"\n",(0,s.jsx)(e,{columns:l.Jth.YB}),"\n",(0,s.jsx)(i.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,s.jsx)(n,{relatedEntities:l.Jth.fw}),"\n",(0,s.jsx)(i.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,s.jsx)(a,{coreEntities:l.Jth.Zw}),"\n",(0,s.jsx)(i.h2,{id:"relationship",children:"Relationship"}),"\n",(0,s.jsx)(o,{relationship:l.Jth.dL,simple:!0}),"\n",l.Jth.Ut&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h2",{children:"Additional Information"}),Array.isArray(l.Jth.Ut)?l.Jth.Ut.map(((t,i)=>(0,s.jsx)("p",{children:t},i))):(0,s.jsx)("p",{children:l.Jth.Ut})]})]})}function h(t={}){const{wrapper:i}={...(0,r.R)(),...t.components};return i?(0,s.jsx)(i,{...t,children:(0,s.jsx)(u,{...t})}):u(t)}function c(t,i){throw new Error("Expected "+(i?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);