"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[8139],{3789:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"data-dictionary/F/float-details","title":"Float Details","description":"The Data Dictionary entry for the Float Details entity","source":"@site/docs/data-dictionary/F/float-details.mdx","sourceDirName":"data-dictionary/F","slug":"/data-dictionary/float-details","permalink":"/docs/data-dictionary/float-details","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/F/float-details.mdx","tags":[],"version":"current","frontMatter":{"title":"Float Details","description":"The Data Dictionary entry for the Float Details entity","slug":"/data-dictionary/float-details"},"sidebar":"dataDictionarySidebar","previous":{"title":"Worker\'s Claims","permalink":"/docs/data-dictionary/employee-hcm/workers-claims"},"next":{"title":"Gate Access","permalink":"/docs/data-dictionary/gate-access"}}');var n=i(4848),l=i(8453),s=i(6201);const r={title:"Float Details",description:"The Data Dictionary entry for the Float Details entity",slug:"/data-dictionary/float-details"},o="Float Details",d={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function p(t){const e={h1:"h1",h2:"h2",header:"header",...(0,l.R)(),...t.components},{ColumnsTable:i,CoreEntityTable:a,RelatedEntitiesList:r,RelationshipTable:o,SupportedTypesTable:d}=e;return i||h("ColumnsTable",!0),a||h("CoreEntityTable",!0),r||h("RelatedEntitiesList",!0),o||h("RelationshipTable",!0),d||h("SupportedTypesTable",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"float-details",children:"Float Details"})}),"\n","\n",Array.isArray(s.bvu.h_)?s.bvu.h_.map(((t,e)=>(0,n.jsx)("p",{children:t},e))):s.bvu.h_.split("\n").map(((t,e)=>(0,n.jsx)("p",{children:t},e))),"\n",(0,n.jsx)(e.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,n.jsx)(d,{supportedTypes:s.bvu.mz}),"\n",(0,n.jsx)(e.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",s.bvu.tB,"\n",(0,n.jsx)(e.h2,{id:"columns",children:"Columns"}),"\n",(0,n.jsx)(i,{columns:s.bvu.YB}),"\n",(0,n.jsx)(e.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,n.jsx)(r,{relatedEntities:s.bvu.fw}),"\n",(0,n.jsx)(e.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,n.jsx)(a,{coreEntities:s.bvu.Zw}),"\n",(0,n.jsx)(e.h2,{id:"relationship",children:"Relationship"}),"\n",(0,n.jsx)(o,{relationship:s.bvu.dL,simple:!0}),"\n",s.bvu.additionalInfo&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h2",{children:"Additional Information"}),Array.isArray(s.bvu.additionalInfo)?s.bvu.additionalInfo.map(((t,e)=>(0,n.jsx)("p",{children:t},e))):(0,n.jsx)("p",{children:s.bvu.additionalInfo})]})]})}function u(t={}){const{wrapper:e}={...(0,l.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(p,{...t})}):p(t)}function h(t,e){throw new Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);