"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[6575],{5106:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"data-dictionary/C/coverage-detail-scheduled-count","title":"Coverage Detail - Scheduled Count","description":"The Data Dictionary entry for the Coverage Detail - Scheduled Count entity","source":"@site/docs/data-dictionary/C/coverage-detail-scheduled-count.mdx","sourceDirName":"data-dictionary/C","slug":"/data-dictionary/coverage-detail-scheduled-count","permalink":"/birt-docs/docs/data-dictionary/coverage-detail-scheduled-count","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/C/coverage-detail-scheduled-count.mdx","tags":[],"version":"current","frontMatter":{"title":"Coverage Detail - Scheduled Count","description":"The Data Dictionary entry for the Coverage Detail - Scheduled Count entity","slug":"/data-dictionary/coverage-detail-scheduled-count"},"sidebar":"dataDictionarySidebar","previous":{"title":"Cover Request","permalink":"/birt-docs/docs/data-dictionary/cover-request"},"next":{"title":"Coverage - Scheduled Count","permalink":"/birt-docs/docs/data-dictionary/coverage-scheduled-count"}}');var d=i(4848),n=i(8453),r=i(6201);const o={title:"Coverage Detail - Scheduled Count",description:"The Data Dictionary entry for the Coverage Detail - Scheduled Count entity",slug:"/data-dictionary/coverage-detail-scheduled-count"},l="Coverage Detail - Scheduled Count",s={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function u(e){const t={h1:"h1",h2:"h2",header:"header",...(0,n.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:a,RelatedEntitiesList:o,RelationshipTable:l,SupportedTypesTable:s}=t;return i||p("ColumnsTable",!0),a||p("CoreEntityTable",!0),o||p("RelatedEntitiesList",!0),l||p("RelationshipTable",!0),s||p("SupportedTypesTable",!0),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"coverage-detail---scheduled-count",children:"Coverage Detail - Scheduled Count"})}),"\n","\n",Array.isArray(r.Oq0.h_)?r.Oq0.h_.map(((e,t)=>(0,d.jsx)("p",{children:e},t))):r.Oq0.h_.split("\n").map(((e,t)=>(0,d.jsx)("p",{children:e},t))),"\n",(0,d.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,d.jsx)(s,{supportedTypes:r.Oq0.mz}),"\n",(0,d.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",r.Oq0.tB,"\n",(0,d.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,d.jsx)(i,{columns:r.Oq0.YB}),"\n",(0,d.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,d.jsx)(o,{relatedEntities:r.Oq0.fw}),"\n",(0,d.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,d.jsx)(a,{coreEntities:r.Oq0.Zw}),"\n",(0,d.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,d.jsx)(l,{relationship:r.Oq0.dL,simple:!0}),"\n",r.Oq0.additionalInfo&&(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("h2",{children:"Additional Information"}),Array.isArray(r.Oq0.additionalInfo)?r.Oq0.additionalInfo.map(((e,t)=>(0,d.jsx)("p",{children:e},t))):(0,d.jsx)("p",{children:r.Oq0.additionalInfo})]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(u,{...e})}):u(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);