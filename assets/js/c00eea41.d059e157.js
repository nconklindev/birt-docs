"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[5812],{9456:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"data-dictionary/P/projected-paycode-totals-corrections-only","title":"Projected Paycode Totals (Corrections Only)","description":"The Data Dictionary entry for the Projected Paycode Totals (Corrections Only) entity","source":"@site/docs/data-dictionary/P/projected-paycode-totals-corrections-only.mdx","sourceDirName":"data-dictionary/P","slug":"/data-dictionary/projected-paycode-totals-corrections-only","permalink":"/docs/data-dictionary/projected-paycode-totals-corrections-only","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/P/projected-paycode-totals-corrections-only.mdx","tags":[],"version":"current","frontMatter":{"title":"Projected Paycode Totals (Corrections Only)","description":"The Data Dictionary entry for the Projected Paycode Totals (Corrections Only) entity","slug":"/data-dictionary/projected-paycode-totals-corrections-only"},"sidebar":"dataDictionarySidebar","previous":{"title":"Priority Scheduling Engine Audit","permalink":"/docs/data-dictionary/priority-scheduling-engine-audit"},"next":{"title":"Projected Paycode Totals (Exclude Corrections)","permalink":"/docs/data-dictionary/projected-paycode-totals-exclude-corrections"}}');var r=o(4848),n=o(8453),a=o(6201);const d={title:"Projected Paycode Totals (Corrections Only)",description:"The Data Dictionary entry for the Projected Paycode Totals (Corrections Only) entity",slug:"/data-dictionary/projected-paycode-totals-corrections-only"},s="Projected Paycode Totals (Corrections Only)",c={},l=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function y(e){const t={h1:"h1",h2:"h2",header:"header",...(0,n.R)(),...e.components},{ColumnsTable:o,CoreEntityTable:i,RelatedEntitiesList:d,RelationshipTable:s,SupportedTypesTable:c}=t;return o||h("ColumnsTable",!0),i||h("CoreEntityTable",!0),d||h("RelatedEntitiesList",!0),s||h("RelationshipTable",!0),c||h("SupportedTypesTable",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"projected-paycode-totals-corrections-only",children:"Projected Paycode Totals (Corrections Only)"})}),"\n","\n",Array.isArray(a.iEd.h_)?a.iEd.h_.map(((e,t)=>(0,r.jsx)("p",{children:e},t))):a.iEd.h_.split("\n").map(((e,t)=>(0,r.jsx)("p",{children:e},t))),"\n",(0,r.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,r.jsx)(c,{supportedTypes:a.iEd.mz}),"\n",(0,r.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",a.iEd.tB,"\n",(0,r.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,r.jsx)(o,{columns:a.iEd.YB}),"\n",(0,r.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,r.jsx)(d,{relatedEntities:a.iEd.fw}),"\n",(0,r.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,r.jsx)(i,{coreEntities:a.iEd.Zw}),"\n",(0,r.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,r.jsx)(s,{relationship:a.iEd.dL,simple:!0}),"\n",a.iEd.Ut&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h2",{children:"Additional Information"}),Array.isArray(a.iEd.Ut)?a.iEd.Ut.map(((e,t)=>(0,r.jsx)("p",{children:e},t))):(0,r.jsx)("p",{children:a.iEd.Ut})]})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(y,{...e})}):y(e)}function h(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);