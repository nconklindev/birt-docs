"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[1262],{1899:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>y,frontMatter:()=>o,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"data-dictionary/P/pay-period","title":"Pay Period","description":"The Data Dictionary entry for the Pay Period entity","source":"@site/docs/data-dictionary/P/pay-period.mdx","sourceDirName":"data-dictionary/P","slug":"/data-dictionary/pay-period","permalink":"/docs/data-dictionary/pay-period","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/P/pay-period.mdx","tags":[],"version":"current","frontMatter":{"title":"Pay Period","description":"The Data Dictionary entry for the Pay Period entity","slug":"/data-dictionary/pay-period"},"sidebar":"dataDictionarySidebar","previous":{"title":"Overtime Approvers","permalink":"/docs/data-dictionary/overtime-approvers"},"next":{"title":"Pay Rule Assignment History","permalink":"/docs/data-dictionary/pay-rule-assignment-history"}}');var r=i(4848),n=i(8453),d=i(6201);const o={title:"Pay Period",description:"The Data Dictionary entry for the Pay Period entity",slug:"/data-dictionary/pay-period"},s="Pay Period",l={},p=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function c(e){const t={h1:"h1",h2:"h2",header:"header",...(0,n.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:a,RelatedEntitiesList:o,RelationshipTable:s,SupportedTypesTable:l}=t;return i||h("ColumnsTable",!0),a||h("CoreEntityTable",!0),o||h("RelatedEntitiesList",!0),s||h("RelationshipTable",!0),l||h("SupportedTypesTable",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"pay-period",children:"Pay Period"})}),"\n","\n",Array.isArray(d.OSA.h_)?d.OSA.h_.map(((e,t)=>(0,r.jsx)("p",{children:e},t))):d.OSA.h_.split("\n").map(((e,t)=>(0,r.jsx)("p",{children:e},t))),"\n",(0,r.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,r.jsx)(l,{supportedTypes:d.OSA.mz}),"\n",(0,r.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",d.OSA.tB,"\n",(0,r.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,r.jsx)(i,{columns:d.OSA.YB}),"\n",(0,r.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,r.jsx)(o,{relatedEntities:d.OSA.fw}),"\n",(0,r.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,r.jsx)(a,{coreEntities:d.OSA.Zw}),"\n",(0,r.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,r.jsx)(s,{relationship:d.OSA.dL,simple:!0}),"\n",d.OSA.additionalInfo&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h2",{children:"Additional Information"}),Array.isArray(d.OSA.additionalInfo)?d.OSA.additionalInfo.map(((e,t)=>(0,r.jsx)("p",{children:e},t))):(0,r.jsx)("p",{children:d.OSA.additionalInfo})]})]})}function y(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}function h(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);