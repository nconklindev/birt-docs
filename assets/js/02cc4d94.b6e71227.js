"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[6616],{9136:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"data-dictionary/S/schedule-summary","title":"Schedule Summary","description":"The Data Dictionary entry for the Schedule Summary entity","source":"@site/docs/data-dictionary/S/schedule-summary.mdx","sourceDirName":"data-dictionary/S","slug":"/data-dictionary/schedule-summary","permalink":"/docs/data-dictionary/schedule-summary","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/S/schedule-summary.mdx","tags":[],"version":"current","frontMatter":{"title":"Schedule Summary","description":"The Data Dictionary entry for the Schedule Summary entity","slug":"/data-dictionary/schedule-summary"},"sidebar":"dataDictionarySidebar","previous":{"title":"Schedule Segment Availability","permalink":"/docs/data-dictionary/schedule-segment-availability"},"next":{"title":"Schedule Tag Segment","permalink":"/docs/data-dictionary/schedule-tag-segment"}}');var n=i(4848),r=i(8453),d=i(6201);const s={title:"Schedule Summary",description:"The Data Dictionary entry for the Schedule Summary entity",slug:"/data-dictionary/schedule-summary"},l="Schedule Summary",o={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function u(e){const t={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:a,RelatedEntitiesList:s,RelationshipTable:l,SupportedTypesTable:o}=t;return i||m("ColumnsTable",!0),a||m("CoreEntityTable",!0),s||m("RelatedEntitiesList",!0),l||m("RelationshipTable",!0),o||m("SupportedTypesTable",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"schedule-summary",children:"Schedule Summary"})}),"\n","\n",Array.isArray(d.Mjq.h_)?d.Mjq.h_.map(((e,t)=>(0,n.jsx)("p",{children:e},t))):d.Mjq.h_.split("\n").map(((e,t)=>(0,n.jsx)("p",{children:e},t))),"\n",(0,n.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,n.jsx)(o,{supportedTypes:d.Mjq.mz}),"\n",(0,n.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",d.Mjq.tB,"\n",(0,n.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,n.jsx)(i,{columns:d.Mjq.YB}),"\n",(0,n.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,n.jsx)(s,{relatedEntities:d.Mjq.fw}),"\n",(0,n.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,n.jsx)(a,{coreEntities:d.Mjq.Zw}),"\n",(0,n.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,n.jsx)(l,{relationship:d.Mjq.dL,simple:!0}),"\n",d.Mjq.additionalInfo&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h2",{children:"Additional Information"}),Array.isArray(d.Mjq.additionalInfo)?d.Mjq.additionalInfo.map(((e,t)=>(0,n.jsx)("p",{children:e},t))):(0,n.jsx)("p",{children:d.Mjq.additionalInfo})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}function m(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);