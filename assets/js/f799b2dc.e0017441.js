"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[4627],{1846:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"data-dictionary/W/worked-span","title":"Worked Span","description":"The Data Dictionary entry for the Worked Span entity","source":"@site/docs/data-dictionary/W/worked-span.mdx","sourceDirName":"data-dictionary/W","slug":"/data-dictionary/worked-span","permalink":"/birt-docs/docs/data-dictionary/worked-span","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/W/worked-span.mdx","tags":[],"version":"current","frontMatter":{"title":"Worked Span","description":"The Data Dictionary entry for the Worked Span entity","slug":"/data-dictionary/worked-span"},"sidebar":"dataDictionarySidebar","previous":{"title":"Worked Span Out Punch","permalink":"/birt-docs/docs/data-dictionary/worked-span-out-punch"},"next":{"title":"Workload - Budgeted Count","permalink":"/birt-docs/docs/data-dictionary/workload-budgeted-count"}}');var a=i(4848),d=i(8453),r=i(6201);const o={title:"Worked Span",description:"The Data Dictionary entry for the Worked Span entity",slug:"/data-dictionary/worked-span"},s="Worked Span",l={},p=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function c(e){const t={h1:"h1",h2:"h2",header:"header",...(0,d.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:n,RelatedEntitiesList:o,RelationshipTable:s,SupportedTypesTable:l}=t;return i||u("ColumnsTable",!0),n||u("CoreEntityTable",!0),o||u("RelatedEntitiesList",!0),s||u("RelationshipTable",!0),l||u("SupportedTypesTable",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"worked-span",children:"Worked Span"})}),"\n","\n",Array.isArray(r.dIX.h_)?r.dIX.h_.map(((e,t)=>(0,a.jsx)("p",{children:e},t))):r.dIX.h_.split("\n").map(((e,t)=>(0,a.jsx)("p",{children:e},t))),"\n",(0,a.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,a.jsx)(l,{supportedTypes:r.dIX.mz}),"\n",(0,a.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",r.dIX.tB,"\n",(0,a.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,a.jsx)(i,{columns:r.dIX.YB}),"\n",(0,a.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,a.jsx)(o,{relatedEntities:r.dIX.fw}),"\n",(0,a.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,a.jsx)(n,{coreEntities:r.dIX.Zw}),"\n",(0,a.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,a.jsx)(s,{relationship:r.dIX.dL,simple:!0}),"\n",r.dIX.additionalInfo&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("h2",{children:"Additional Information"}),Array.isArray(r.dIX.additionalInfo)?r.dIX.additionalInfo.map(((e,t)=>(0,a.jsx)("p",{children:e},t))):(0,a.jsx)("p",{children:r.dIX.additionalInfo})]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);