"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[5458],{8723:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"birt-studio/getting-started/index","title":"Getting Started","description":"","source":"@site/docs/birt-studio/01-getting-started/index.mdx","sourceDirName":"birt-studio/01-getting-started","slug":"/birt-studio/getting-started/","permalink":"/birt-docs/docs/birt-studio/getting-started/","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/birt-studio/01-getting-started/index.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"birtStudioSidebar","next":{"title":"Getting Started","permalink":"/birt-docs/docs/birt-studio/getting-started"}}');var s=r(4848),i=r(8453),o=r(3514);const c={},a="Getting Started",l={},d=[];function u(t){const e={h1:"h1",header:"header",...(0,i.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,s.jsx)(o.A,{})]})}function m(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(u,{...t})}):u(t)}},3514:(t,e,r)=>{r.d(e,{A:()=>b});r(6540);var n=r(4164),s=r(4718),i=r(8774),o=r(5846),c=r(6654),a=r(1312),l=r(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var u=r(4848);function m(t){let{href:e,children:r}=t;return(0,u.jsx)(i.A,{href:e,className:(0,n.A)("card padding--lg",d.cardContainer),children:r})}function h(t){let{href:e,icon:r,title:s,description:i}=t;return(0,u.jsxs)(m,{href:e,children:[(0,u.jsxs)(l.A,{as:"h2",className:(0,n.A)("text--truncate",d.cardTitle),title:s,children:[r," ",s]}),i&&(0,u.jsx)("p",{className:(0,n.A)("text--truncate",d.cardDescription),title:i,children:i})]})}function g(t){let{item:e}=t;const r=(0,s.Nr)(e),n=function(){const{selectMessage:t}=(0,o.W)();return e=>t(e,(0,a.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:e}))}();return r?(0,u.jsx)(h,{href:r,icon:"\ud83d\uddc3\ufe0f",title:e.label,description:e.description??n(e.items.length)}):null}function f(t){let{item:e}=t;const r=(0,c.A)(e.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",n=(0,s.cC)(e.docId??void 0);return(0,u.jsx)(h,{href:e.href,icon:r,title:e.label,description:e.description??n?.description})}function p(t){let{item:e}=t;switch(e.type){case"link":return(0,u.jsx)(f,{item:e});case"category":return(0,u.jsx)(g,{item:e});default:throw new Error(`unknown item type ${JSON.stringify(e)}`)}}function x(t){let{className:e}=t;const r=(0,s.$S)();return(0,u.jsx)(b,{items:r.items,className:e})}function b(t){const{items:e,className:r}=t;if(!e)return(0,u.jsx)(x,{...t});const i=(0,s.d1)(e);return(0,u.jsx)("section",{className:(0,n.A)("row",r),children:i.map(((t,e)=>(0,u.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,u.jsx)(p,{item:t})},e)))})}},5846:(t,e,r)=>{r.d(e,{W:()=>l});var n=r(6540),s=r(4586);const i=["zero","one","two","few","many","other"];function o(t){return i.filter((e=>t.includes(e)))}const c={locale:"en",pluralForms:o(["one","other"]),select:t=>1===t?"one":"other"};function a(){const{i18n:{currentLocale:t}}=(0,s.A)();return(0,n.useMemo)((()=>{try{return function(t){const e=new Intl.PluralRules(t);return{locale:t,pluralForms:o(e.resolvedOptions().pluralCategories),select:t=>e.select(t)}}(t)}catch(e){return console.error(`Failed to use Intl.PluralRules for locale "${t}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${e.message}\n`),c}}),[t])}function l(){const t=a();return{selectMessage:(e,r)=>function(t,e,r){const n=t.split("|");if(1===n.length)return n[0];n.length>r.pluralForms.length&&console.error(`For locale=${r.locale}, a maximum of ${r.pluralForms.length} plural forms are expected (${r.pluralForms.join(",")}), but the message contains ${n.length}: ${t}`);const s=r.select(e),i=r.pluralForms.indexOf(s);return n[Math.min(i,n.length-1)]}(r,e,t)}}}}]);