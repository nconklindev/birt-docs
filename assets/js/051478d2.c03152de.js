"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[6258],{211:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"data-dictionary/healthcare-analytics/volume","title":"Volume","description":"The Data Dictionary entry for the Volume entity","source":"@site/docs/data-dictionary/healthcare-analytics/volume.mdx","sourceDirName":"data-dictionary/healthcare-analytics","slug":"/data-dictionary/healthcare-analytics/volume","permalink":"/birt-docs/docs/data-dictionary/healthcare-analytics/volume","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/healthcare-analytics/volume.mdx","tags":[],"version":"current","frontMatter":{"title":"Volume","description":"The Data Dictionary entry for the Volume entity"},"sidebar":"dataDictionarySidebar","previous":{"title":"Volume Work Unit","permalink":"/birt-docs/docs/data-dictionary/healthcare-analytics/volume-work-unit"},"next":{"title":"Work Group","permalink":"/birt-docs/docs/data-dictionary/healthcare-analytics/work-group"}}');var n=i(4848),r=i(8453),l=i(6201);const o={title:"Volume",description:"The Data Dictionary entry for the Volume entity"},s="Volume",d={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function p(e){const t={h1:"h1",h2:"h2",header:"header",...(0,r.R)(),...e.components},{ColumnsTable:i,CoreEntityTable:a,RelatedEntitiesList:o,RelationshipTable:s,SupportedTypesTable:d}=t;return i||u("ColumnsTable",!0),a||u("CoreEntityTable",!0),o||u("RelatedEntitiesList",!0),s||u("RelationshipTable",!0),d||u("SupportedTypesTable",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"volume",children:"Volume"})}),"\n","\n",Array.isArray(l.pDz.h_)?l.pDz.h_.map(((e,t)=>(0,n.jsx)("p",{children:e},t))):l.pDz.h_.split("\n").map(((e,t)=>(0,n.jsx)("p",{children:e},t))),"\n",(0,n.jsx)(t.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,n.jsx)(d,{supportedTypes:l.pDz.mz}),"\n",(0,n.jsx)(t.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",l.pDz.tB,"\n",(0,n.jsx)(t.h2,{id:"columns",children:"Columns"}),"\n",(0,n.jsx)(i,{columns:l.pDz.YB}),"\n",(0,n.jsx)(t.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,n.jsx)(o,{relatedEntities:l.pDz.fw}),"\n",(0,n.jsx)(t.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,n.jsx)(a,{coreEntities:l.pDz.Zw}),"\n",(0,n.jsx)(t.h2,{id:"relationship",children:"Relationship"}),"\n",(0,n.jsx)(s,{relationship:l.pDz.dL}),"\n",l.pDz.Ut&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("h2",{children:"Additional Information"}),Array.isArray(l.pDz.Ut)?l.pDz.Ut.map(((e,t)=>(0,n.jsx)("p",{children:e},t))):(0,n.jsx)("p",{children:l.pDz.Ut})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);