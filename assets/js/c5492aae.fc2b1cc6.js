"use strict";(self.webpackChunkbirt_docs=self.webpackChunkbirt_docs||[]).push([[1591],{2360:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"data-dictionary/W/worked-shift","title":"Worked Shift","description":"The Data Dictionary entry for the Worked Shift entity","source":"@site/docs/data-dictionary/W/worked-shift.mdx","sourceDirName":"data-dictionary/W","slug":"/data-dictionary/worked-shift","permalink":"/birt-docs/docs/data-dictionary/worked-shift","draft":false,"unlisted":false,"editUrl":"https://github.com/nconklindev/birt-docs/edit/main/docs/data-dictionary/W/worked-shift.mdx","tags":[],"version":"current","frontMatter":{"title":"Worked Shift","description":"The Data Dictionary entry for the Worked Shift entity","slug":"/data-dictionary/worked-shift"},"sidebar":"dataDictionarySidebar","previous":{"title":"Worked Job","permalink":"/birt-docs/docs/data-dictionary/worked-job"},"next":{"title":"Worked Span In Punch","permalink":"/birt-docs/docs/data-dictionary/worked-span-in-punch"}}');var r=i(4848),a=i(8453),d=i(6201);const o={title:"Worked Shift",description:"The Data Dictionary entry for the Worked Shift entity",slug:"/data-dictionary/worked-shift"},s="Worked Shift",l={},c=[{value:"Supported Types",id:"supported-types",level:2},{value:"Data Granularity",id:"data-granularity",level:2},{value:"Columns",id:"columns",level:2},{value:"Related Entities",id:"related-entities",level:2},{value:"Core Entity",id:"core-entity",level:2},{value:"Relationship",id:"relationship",level:2}];function h(t){const e={h1:"h1",h2:"h2",header:"header",...(0,a.R)(),...t.components},{ColumnsTable:i,CoreEntityTable:n,RelatedEntitiesList:o,RelationshipTable:s,SupportedTypesTable:l}=e;return i||p("ColumnsTable",!0),n||p("CoreEntityTable",!0),o||p("RelatedEntitiesList",!0),s||p("RelationshipTable",!0),l||p("SupportedTypesTable",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"worked-shift",children:"Worked Shift"})}),"\n","\n",Array.isArray(d.tff.h_)?d.tff.h_.map(((t,e)=>(0,r.jsx)("p",{children:t},e))):d.tff.h_.split("\n").map(((t,e)=>(0,r.jsx)("p",{children:t},e))),"\n",(0,r.jsx)(e.h2,{id:"supported-types",children:"Supported Types"}),"\n",(0,r.jsx)(l,{supportedTypes:d.tff.mz}),"\n",(0,r.jsx)(e.h2,{id:"data-granularity",children:"Data Granularity"}),"\n",d.tff.tB,"\n",(0,r.jsx)(e.h2,{id:"columns",children:"Columns"}),"\n",(0,r.jsx)(i,{columns:d.tff.YB}),"\n",(0,r.jsx)(e.h2,{id:"related-entities",children:"Related Entities"}),"\n",(0,r.jsx)(o,{relatedEntities:d.tff.fw}),"\n",(0,r.jsx)(e.h2,{id:"core-entity",children:"Core Entity"}),"\n",(0,r.jsx)(n,{coreEntities:d.tff.Zw}),"\n",(0,r.jsx)(e.h2,{id:"relationship",children:"Relationship"}),"\n",(0,r.jsx)(s,{relationship:d.tff.dL,simple:!0}),"\n",d.tff.additionalInfo&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("h2",{children:"Additional Information"}),Array.isArray(d.tff.additionalInfo)?d.tff.additionalInfo.map(((t,e)=>(0,r.jsx)("p",{children:t},e))):(0,r.jsx)("p",{children:d.tff.additionalInfo})]})]})}function f(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(h,{...t})}):h(t)}function p(t,e){throw new Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);